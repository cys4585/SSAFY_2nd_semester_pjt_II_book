# Generated by Django 3.2.7 on 2021-09-27 06:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn', models.CharField(max_length=13)),
                ('title', models.CharField(max_length=100)),
                ('author', models.CharField(max_length=100)),
                ('translator', models.CharField(max_length=100, null=True)),
                ('publisher', models.CharField(max_length=100)),
                ('publish_date', models.DateField()),
                ('book_img', models.CharField(max_length=100)),
                ('price', models.IntegerField()),
                ('page', models.IntegerField(null=True)),
                ('content', models.TextField(null=True)),
                ('kb_score', models.FloatField(null=True)),
                ('kb_review_cnt', models.IntegerField(null=True)),
                ('like_users', models.ManyToManyField(
                    related_name='like_books', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('score', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='reviews', to='books.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                 related_name='reviews', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('category_first', models.CharField(max_length=10)),
                ('category_second', models.CharField(max_length=10, null=True)),
                ('category_third', models.CharField(max_length=10, null=True)),
                ('category_fourth', models.CharField(max_length=10, null=True)),
                ('category_fifth', models.CharField(max_length=10, null=True)),
                ('book', models.OneToOneField(
                    on_delete=django.db.models.deletion.CASCADE, related_name='category', to='books.book')),
            ],
        ),
        migrations.CreateModel(
            name='BookReadUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                 primary_key=True, serialize=False, verbose_name='ID')),
                ('read_at', models.DateField()),
                ('book', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to='books.book')),
                ('user', models.ForeignKey(
                    on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'book_read_users',
            },
        ),
        migrations.AddField(
            model_name='book',
            name='read_users',
            field=models.ManyToManyField(
                related_name='read_books', through='books.BookReadUser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='book',
            name='tags',
            field=models.ManyToManyField(related_name='books', to='books.Tag'),
        ),
    ]
